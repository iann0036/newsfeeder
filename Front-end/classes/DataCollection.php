<?php	/*	File name: /classes/DataCollection.php	Author: Ian Mckay <im607@uowmail.edu.au>	Purpose: Provides a generic storage class with functions for extended classes	Last Modified: 10:44 PM 12/01/2012	*/	if (!defined('ROOT'))		define('ROOT',realpath($_SERVER['DOCUMENT_ROOT']));	require_once ROOT.'/misc/init.php';	require_once ROOT.'/classes/DatabaseConnection.php';		/**	 * Provides a generic storage class with functions for extended classes	 * 	 * @author Ian Mckay <im607@uowmail.edu.au>	 */	class DataCollection {		/**		 * A generic array to store data items		 */		protected $data = array(); // The data collection as an array		/**		 * An incrementer for the data items		 * @var int		 */		private $pointer = 0;		/**		 * An instance of a database connection		 * @var DatabaseConnection 		 */		protected $db;				/**		 * Initializes DataCollection class, creates new database connection 		 */		public function __construct() {			$this->db = new DatabaseConnection();		}				/**		 * Resets pointer to start 		 */		public function start() {			$this->pointer = 0;		}				/**		 * Navigates through data to find particular id		 * @param int $id the id of the data		 * @return mixed returns element if found, otherwise false		 */		public function getElementById($id) {			foreach ($this->data as $element) {				if ($element['id']==$id)					return $element;			}			return false;		}				/**		 * Determines if more data is available		 * @param int $max optional maximum output parameter, useful for "last 10" list		 * @return boolean returns true if more data is available, else false		 */		public function more($max = -1) {			if ($max!=-1 && $this->pointer>=$max)				return false;			return ($this->pointer<count($this->data));		}				/**		 * Gets next data element		 * @return mixed returns next data element 		 */		public function next() {			$this->pointer++;			return $this->data[$this->pointer-1];		}	}?>